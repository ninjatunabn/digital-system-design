library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity bcd8 is
    Port (
        clk       : in  STD_LOGIC;
        reset     : in  STD_LOGIC;
        load      : in  STD_LOGIC;
        direction : in  STD_LOGIC;
        D         : in  STD_LOGIC_VECTOR(7 downto 0);		%orolt
        Q         : out STD_LOGIC_VECTOR(7 downto 0));
end bcd8;

architecture arch_bcd of bcd8 is
    signal count : STD_LOGIC_VECTOR(7 downto 0) := "00000000";
begin
    process(clk, reset)
    begin
        if reset = '1' then
            count <= "00000000";
        elsif rising_edge(clk) then
            if load = '1' then
                count <= D;
            else
                if direction = '1' then
                    if count(3 downto 0) = "1001" then
                        count(3 downto 0) <= "0000";
                        if count(7 downto 4) = "1001" then
                            count(7 downto 4) <= "0000";
                        else
                            count(7 downto 4) <= count(7 downto 4) + 1;
                        end if;
                    else
                        count(3 downto 0) <= count(3 downto 0) + 1;
                    end if;
                else
                    if count(3 downto 0) = "0000" then
                        count(3 downto 0) <= "1001";
                        if count(7 downto 4) = "0000" then
                            count(7 downto 4) <= "1001";
                        else
                            count(7 downto 4) <= count(7 downto 4) - 1;
                        end if;
                    else
                        count(3 downto 0) <= count(3 downto 0) - 1;
                    end if;
                end if;
            end if;
        end if;
    end process;
    Q <= count;
end arch_bcd;